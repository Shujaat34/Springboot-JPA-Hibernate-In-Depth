#Enabling the console for H2 in memory Database
spring.h2.console.enabled=true

#settin the datasource to h2
spring.datasource.url=jdbc:h2:mem:testdb

#showing the sql query on console
spring.jpa.show-sql=true

#Turn on statistics
spring.jpa.properties.hibernate.generate_statistics=true
logging.level.org.hibernate.stat=debug

#Format Queries in console
spring.jpa.properties.hibernate.format_sql=true;

#show the parameter passed for each query
logging.level.org.hibernate.type=trace

#setting the default Isolation Level
spring.jpa.properties.hibernate.connection.isolation=2

# Steps to to Use Second Level Cache
# 1. Enable Second Level cache
spring.jpa.properties.hibernate.cache.use_second_level_cache=true
# 2. Specify the Cache Framework ehcache by specifying the Fully qualified Name
spring.jpa.properties.hibernate.cache.region.factory_class=org.hibernate.cache.ehcache.internal.EhcacheRegionFactory
# 3. Only cache What I tell you (because all things are not cacheable)
# Note we prefer cacahing that data which does not change
spring.jpa.properties.javax.persistance.sharedCache.mode=ENABLE_SELECTIVE
logging.level.net.sf.ehcache=debug
# 4. What data to cache?

